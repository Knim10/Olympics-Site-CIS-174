// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGamesSite.Data;

#nullable disable

namespace OlympicGamesSite.Migrations
{
    [DbContext(typeof(OlympicsDbContext))]
    [Migration("20250707004152_AddTicketTable")]
    partial class AddTicketTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OlympicGamesSite.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Game")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Outdoor",
                            Country = "Austria",
                            Game = "Paralympics",
                            SportName = "Canoe Sprint"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Outdoor",
                            Country = "Brazil",
                            Game = "Summer Olympics",
                            SportName = "Road Cycling"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Indoor",
                            Country = "Canada",
                            Game = "Winter Olympics",
                            SportName = "Curling"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Indoor",
                            Country = "China",
                            Game = "Summer Olympics",
                            SportName = "Diving"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Indoor",
                            Country = "Cyprus",
                            Game = "Youth Olympic Games",
                            SportName = "Breakdancing"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Outdoor",
                            Country = "Finland",
                            Game = "Youth Olympic Games",
                            SportName = "Skateboarding"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Indoor",
                            Country = "France",
                            Game = "Youth Olympic Games",
                            SportName = "Breakdancing"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Indoor",
                            Country = "Germany",
                            Game = "Summer Olympics",
                            SportName = "Diving"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Indoor",
                            Country = "Great Britain",
                            Game = "Winter Olympics",
                            SportName = "Curling"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Outdoor",
                            Country = "Italy",
                            Game = "Winter Olympics",
                            SportName = "Bobsleigh"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Outdoor",
                            Country = "Jamaica",
                            Game = "Winter Olympics",
                            SportName = "Bobsleigh"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Outdoor",
                            Country = "Japan",
                            Game = "Winter Olympics",
                            SportName = "Bobsleigh"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Indoor",
                            Country = "Mexico",
                            Game = "Summer Olympics",
                            SportName = "Diving"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Outdoor",
                            Country = "Netherlands",
                            Game = "Summer Olympics",
                            SportName = "Cycling"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Outdoor",
                            Country = "Pakistan",
                            Game = "Paralympics",
                            SportName = "Canoe Sprint"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Outdoor",
                            Country = "Portugal",
                            Game = "Youth Olympic Games",
                            SportName = "Skateboarding"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Indoor",
                            Country = "Russia",
                            Game = "Youth Olympic Games",
                            SportName = "Breakdancing"
                        },
                        new
                        {
                            Id = 18,
                            Category = "Outdoor",
                            Country = "Slovakia",
                            Game = "Youth Olympic Games",
                            SportName = "Skateboarding"
                        },
                        new
                        {
                            Id = 19,
                            Category = "Indoor",
                            Country = "Sweden",
                            Game = "Winter Olympics",
                            SportName = "Curling"
                        },
                        new
                        {
                            Id = 20,
                            Category = "Indoor",
                            Country = "Thailand",
                            Game = "Paralympics",
                            SportName = "Archery"
                        },
                        new
                        {
                            Id = 21,
                            Category = "Indoor",
                            Country = "Ukraine",
                            Game = "Paralympics",
                            SportName = "Archery"
                        },
                        new
                        {
                            Id = 22,
                            Category = "Indoor",
                            Country = "Uruguay",
                            Game = "Paralympics",
                            SportName = "Archery"
                        },
                        new
                        {
                            Id = 23,
                            Category = "Outdoor",
                            Country = "USA",
                            Game = "Summer Olympics",
                            SportName = "Road Cycling"
                        },
                        new
                        {
                            Id = 24,
                            Category = "Outdoor",
                            Country = "Zimbabwe",
                            Game = "Paralympics",
                            SportName = "Canoe Sprint"
                        });
                });

            modelBuilder.Entity("OlympicGamesSite.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<int>("SprintNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
